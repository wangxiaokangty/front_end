{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withCtx as _withCtx, createElementVNode as _createElementVNode, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-e28aca72\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"mcontainer\"\n};\nconst _hoisted_2 = {\n  class: \"welcome-page-center\",\n  style: {\n    \"max-width\": \"960px\",\n    \"margin-left\": \"200px\",\n    \"margin-right\": \"auto\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_vue_particles = _resolveComponent(\"vue-particles\");\n  const _component_Header = _resolveComponent(\"Header\");\n  const _component_router_link = _resolveComponent(\"router-link\");\n  const _component_el_card = _resolveComponent(\"el-card\");\n  const _component_el_timeline_item = _resolveComponent(\"el-timeline-item\");\n  const _component_el_timeline = _resolveComponent(\"el-timeline\");\n  const _component_el_pagination = _resolveComponent(\"el-pagination\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" 主容器 \"), _createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_vue_particles, {\n    color: \"#70E9C2\",\n    particleOpacity: 0.7,\n    particlesNumber: 100,\n    shapeType: \"polygon\",\n    particleSize: 11,\n    linesColor: \"#70E9C2\",\n    linesWidth: 1.3,\n    lineLinked: true,\n    lineOpacity: 0.1,\n    linesDistance: 150,\n    moveSpeed: 3,\n    hoverEffect: true,\n    hoverMode: \"grab\",\n    clickEffect: true,\n    clickMode: \"push\",\n    style: {\n      \"height\": \"1100px\"\n    }\n  }), _createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_Header), _createCommentVNode(\" 时间线组件，用于展示博客条目 \"), _createVNode(_component_el_timeline, null, {\n    default: _withCtx(() => [_createCommentVNode(\" 遍历blogs数组，为每个博客创建一个时间线条目 \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.blogs, blog => {\n      return _openBlock(), _createBlock(_component_el_timeline_item, {\n        key: blog.id,\n        timestamp: blog.created,\n        placement: \"top\"\n      }, {\n        default: _withCtx(() => [_createCommentVNode(\" 卡片组件，显示博客的标题和描述 \"), _createVNode(_component_el_card, null, {\n          default: _withCtx(() => [_createElementVNode(\"h4\", null, [_createCommentVNode(\" 路由链接，点击后跳转到博客详情页 \"), _createVNode(_component_router_link, {\n            to: {\n              name: 'BlogDetail',\n              params: {\n                blogId: blog.id\n              }\n            }\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString(blog.title), 1 /* TEXT */)]),\n            _: 2 /* DYNAMIC */\n          }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"to\"])]), _createElementVNode(\"p\", null, _toDisplayString(blog.description), 1 /* TEXT */)]),\n          _: 2 /* DYNAMIC */\n        }, 1024 /* DYNAMIC_SLOTS */)]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"timestamp\"]);\n    }), 128 /* KEYED_FRAGMENT */))]),\n    _: 1 /* STABLE */\n  }), _createCommentVNode(\" 分页器组件 \"), _createVNode(_component_el_pagination, {\n    class: \"mpage\",\n    background: \"\",\n    layout: \"prev, pager, next\",\n    \"current-page\": $data.currentPage,\n    \"page-size\": $data.pageSize,\n    total: $data.total,\n    onCurrentChange: $options.handlePageChange\n  }, null, 8 /* PROPS */, [\"current-page\", \"page-size\", \"total\", \"onCurrentChange\"])])])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"names":["class","style","_createElementBlock","_Fragment","_createCommentVNode","_createElementVNode","_hoisted_1","_createVNode","_component_vue_particles","color","particleOpacity","particlesNumber","shapeType","particleSize","linesColor","linesWidth","lineLinked","lineOpacity","linesDistance","moveSpeed","hoverEffect","hoverMode","clickEffect","clickMode","_hoisted_2","_component_Header","_component_el_timeline","default","_withCtx","_renderList","$data","blogs","blog","_createBlock","_component_el_timeline_item","key","id","timestamp","created","placement","_component_el_card","_component_router_link","to","name","params","blogId","_createTextVNode","_toDisplayString","title","_","description","_component_el_pagination","background","layout","currentPage","pageSize","total","onCurrentChange","$options","handlePageChange"],"sources":["/Users/wangxiaokang/Desktop/SpringBoot/vue-project/src/views/Blogs.vue"],"sourcesContent":["<template>\n  <!-- 主容器 -->\n  <div class=\"mcontainer\">\n\n    <vue-particles\n        color=\"#70E9C2\"\n        :particleOpacity=\"0.7\"\n        :particlesNumber=\"100\"\n        shapeType=\"polygon\"\n        :particleSize=\"11\"\n        linesColor=\"#70E9C2\"\n        :linesWidth=\"1.3\"\n        :lineLinked=\"true\"\n        :lineOpacity=\"0.1\"\n        :linesDistance=\"150\"\n        :moveSpeed=\"3\"\n        :hoverEffect=\"true\"\n        hoverMode=\"grab\"\n        :clickEffect=\"true\"\n        clickMode=\"push\"\n        style=\"height: 1100px\"\n    >\n    </vue-particles>\n\n\n    <div class=\"welcome-page-center\" style=\"max-width: 960px;margin-left: 200px;\n  margin-right: auto;\">\n      <Header></Header>\n      <!-- 时间线组件，用于展示博客条目 -->\n      <el-timeline>\n        <!-- 遍历blogs数组，为每个博客创建一个时间线条目 -->\n        <el-timeline-item v-for=\"blog in blogs\" :key=\"blog.id\" :timestamp=\"blog.created\" placement=\"top\">\n          <!-- 卡片组件，显示博客的标题和描述 -->\n          <el-card>\n            <h4>\n              <!-- 路由链接，点击后跳转到博客详情页 -->\n              <router-link :to=\"{ name: 'BlogDetail', params: { blogId: blog.id } }\">\n                {{ blog.title }}\n              </router-link>\n            </h4>\n            <p>{{ blog.description }}</p>\n          </el-card>\n        </el-timeline-item>\n      </el-timeline>\n\n      <!-- 分页器组件 -->\n      <el-pagination class=\"mpage\" background layout=\"prev, pager, next\" :current-page=\"currentPage\" :page-size=\"pageSize\"\n        :total=\"total\" @current-change=\"handlePageChange\">\n      </el-pagination>\n    </div>\n  </div>\n\n\n</template>\n\n<script>\n// 引入自定义的头部组件\nimport Header from \"../components/Header\";\n\nexport default {\n  name: \"Blogs\",\n  components: { Header },\n  data() {\n    return {\n      blogs: [],\n      currentPage: 1,\n      total: 0,\n      pageSize: 5\n    }\n  },\n  methods: {\n    handlePageChange(newPage) {\n      // 使用axios获取数据\n      this.$axios.get(`/blogs?currentPage=${newPage}`)\n        .then(response => {\n          const data = response.data.data;\n          this.blogs = data.records;\n          this.currentPage = data.current;\n          this.total = data.total;\n          this.pageSize = data.size;\n        })\n        .catch(error => {\n          console.log(\"xiaochou\")\n          console.error('Error fetching blogs:', error);\n        });\n    }\n  },\n  created() {\n    this.handlePageChange(this.currentPage);\n  }\n}\n</script>\n\n<style scoped>\n/* 分页器样式 */\n.mpage {\n  margin-left: auto;\n  margin-right: auto;\n  /* 自动外边距实现居中 */\n}\n\n.welcome-page-center {\n  width: 70%;\n  height: 50%;\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  margin: 0;\n}\n\n</style>\n"],"mappings":";;;EAEOA,KAAK,EAAC;AAAY;;EAuBhBA,KAAK,EAAC,qBAAqB;EAACC,KACf,EADe;IAAA;IAAA;IAAA;EAAA;;;;;;;;;;uBAzBrCC,mBAAA,CAAAC,SAAA,SACEC,mBAAA,SAAY,EACZC,mBAAA,CAgDM,OAhDNC,UAgDM,GA9CJC,YAAA,CAkBgBC,wBAAA;IAjBZC,KAAK,EAAC,SAAS;IACdC,eAAe,EAAE,GAAG;IACpBC,eAAe,EAAE,GAAG;IACrBC,SAAS,EAAC,SAAS;IAClBC,YAAY,EAAE,EAAE;IACjBC,UAAU,EAAC,SAAS;IACnBC,UAAU,EAAE,GAAG;IACfC,UAAU,EAAE,IAAI;IAChBC,WAAW,EAAE,GAAG;IAChBC,aAAa,EAAE,GAAG;IAClBC,SAAS,EAAE,CAAC;IACZC,WAAW,EAAE,IAAI;IAClBC,SAAS,EAAC,MAAM;IACfC,WAAW,EAAE,IAAI;IAClBC,SAAS,EAAC,MAAM;IAChBtB,KAAsB,EAAtB;MAAA;IAAA;MAKJI,mBAAA,CAwBM,OAxBNmB,UAwBM,GAtBJjB,YAAA,CAAiBkB,iBAAA,GACjBrB,mBAAA,oBAAuB,EACvBG,YAAA,CAccmB,sBAAA;IA3CpBC,OAAA,EAAAC,QAAA,CA8BQ,MAAiC,CAAjCxB,mBAAA,8BAAiC,G,kBACjCF,mBAAA,CAWmBC,SAAA,QA1C3B0B,WAAA,CA+ByCC,KAAA,CAAAC,KAAK,EAAbC,IAAI;2BAA7BC,YAAA,CAWmBC,2BAAA;QAXsBC,GAAG,EAAEH,IAAI,CAACI,EAAE;QAAGC,SAAS,EAAEL,IAAI,CAACM,OAAO;QAAEC,SAAS,EAAC;;QA/BnGZ,OAAA,EAAAC,QAAA,CAgCU,MAAwB,CAAxBxB,mBAAA,qBAAwB,EACxBG,YAAA,CAQUiC,kBAAA;UAzCpBb,OAAA,EAAAC,QAAA,CAkCY,MAKK,CALLvB,mBAAA,CAKK,aAJHD,mBAAA,sBAAyB,EACzBG,YAAA,CAEckC,sBAAA;YAFAC,EAAE;cAAAC,IAAA;cAAAC,MAAA;gBAAAC,MAAA,EAA0Cb,IAAI,CAACI;cAAE;YAAA;;YApC/ET,OAAA,EAAAC,QAAA,CAqCgB,MAAgB,CArChCkB,gBAAA,CAAAC,gBAAA,CAqCmBf,IAAI,CAACgB,KAAK,iB;YArC7BC,CAAA;yDAwCY5C,mBAAA,CAA6B,WAAA0C,gBAAA,CAAvBf,IAAI,CAACkB,WAAW,iB;UAxClCD,CAAA;;QAAAA,CAAA;;;IAAAA,CAAA;MA6CM7C,mBAAA,WAAc,EACdG,YAAA,CAEgB4C,wBAAA;IAFDnD,KAAK,EAAC,OAAO;IAACoD,UAAU,EAAV,EAAU;IAACC,MAAM,EAAC,mBAAmB;IAAE,cAAY,EAAEvB,KAAA,CAAAwB,WAAW;IAAG,WAAS,EAAExB,KAAA,CAAAyB,QAAQ;IAChHC,KAAK,EAAE1B,KAAA,CAAA0B,KAAK;IAAGC,eAAc,EAAEC,QAAA,CAAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}