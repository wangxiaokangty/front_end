{"ast":null,"code":"import { User, Lock } from '@element-plus/icons-vue';\nimport { ref } from 'vue';\nimport { ElMessage } from 'element-plus';\n//控制注册与登录表单的显示， 默认显示注册\nconst isRegister = ref(false);\n//定义数据模型\nconst registerData = ref({\n  username: '',\n  password: '',\n  rePassword: ''\n});\n\n//校验密码的函数\nconst checkRePassword = (rule, value, callback) => {\n  if (value === '') {\n    callback(new Error('请再次确认密码'));\n  } else if (value !== registerData.value.password) {\n    callback(new Error('请确保两次输入的密码一样'));\n  } else {\n    callback();\n  }\n};\n\n//定义表单校验规则\nconst rules = {\n  username: [{\n    required: true,\n    message: '请输入用户名',\n    trigger: 'blur'\n  }, {\n    min: 5,\n    max: 16,\n    message: '长度为5~16位非空字符',\n    trigger: 'blur'\n  }],\n  password: [{\n    required: true,\n    message: '请输入密码',\n    trigger: 'blur'\n  }, {\n    min: 5,\n    max: 16,\n    message: '长度为5~16位非空字符',\n    trigger: 'blur'\n  }],\n  rePassword: [{\n    validator: checkRePassword,\n    trigger: 'blur'\n  }]\n};\n\n//定义函数,清空数据模型的数据\nconst clearRegisterData = () => {\n  registerData.value = {\n    username: '',\n    password: '',\n    rePassword: ''\n  };\n};","map":{"version":3,"names":["User","Lock","ref","ElMessage","isRegister","registerData","username","password","rePassword","checkRePassword","rule","value","callback","Error","rules","required","message","trigger","min","max","validator","clearRegisterData"],"sources":["/Users/wangxiaokang/Desktop/SpringBoot/vue-project/src/views/BlogLogin.vue"],"sourcesContent":["<template>\n  <el-row class=\"login-page\">\n    <el-col :span=\"12\" class=\"bg\"></el-col>\n    <el-col :span=\"6\" :offset=\"3\" class=\"form\">\n      <!-- 注册表单 -->\n      <el-form ref=\"form\" size=\"large\" autocomplete=\"off\" v-if=\"isRegister\" :model=\"registerData\" :rules=\"rules\">\n        <el-form-item>\n          <h1>注册</h1>\n        </el-form-item>\n        <el-form-item prop=\"username\">\n          <el-input :prefix-icon=\"User\" placeholder=\"请输入用户名\" v-model=\"registerData.username\"></el-input>\n        </el-form-item>\n        <el-form-item prop=\"password\">\n          <el-input :prefix-icon=\"Lock\" type=\"password\" placeholder=\"请输入密码\" v-model=\"registerData.password\"></el-input>\n        </el-form-item>\n        <el-form-item prop=\"rePassword\">\n          <el-input :prefix-icon=\"Lock\" type=\"password\" placeholder=\"请输入再次密码\"\n                    v-model=\"registerData.rePassword\"></el-input>\n        </el-form-item>\n        <!-- 注册按钮 -->\n        <el-form-item>\n          <el-button class=\"button\" type=\"primary\" auto-insert-space @click=\"register\">\n            注册\n          </el-button>\n        </el-form-item>\n        <el-form-item class=\"flex\">\n          <el-link type=\"info\" :underline=\"false\" @click=\"isRegister = false; clearRegisterData()\">\n            ← 返回\n          </el-link>\n        </el-form-item>\n      </el-form>\n      <!-- 登录表单 -->\n      <el-form ref=\"form\" size=\"large\" autocomplete=\"off\" v-else :model=\"registerData\" :rules=\"rules\">\n        <el-form-item>\n          <h1>登录</h1>\n        </el-form-item>\n        <el-form-item prop=\"username\">\n          <el-input :prefix-icon=\"User\" placeholder=\"请输入用户名\" v-model=\"registerData.username\"></el-input>\n        </el-form-item>\n        <el-form-item prop=\"password\">\n          <el-input name=\"password\" :prefix-icon=\"Lock\" type=\"password\" placeholder=\"请输入密码\"\n                    v-model=\"registerData.password\"></el-input>\n        </el-form-item>\n        <el-form-item class=\"flex\">\n          <div class=\"flex\">\n            <el-checkbox>记住我</el-checkbox>\n            <el-link type=\"primary\" :underline=\"false\">忘记密码？</el-link>\n          </div>\n        </el-form-item>\n        <!-- 登录按钮 -->\n        <el-form-item>\n          <el-button class=\"button\" type=\"primary\" auto-insert-space @click=\"login\">登录</el-button>\n        </el-form-item>\n        <el-form-item class=\"flex\">\n          <el-link type=\"info\" :underline=\"false\" @click=\"isRegister = true; clearRegisterData()\">\n            注册 →\n          </el-link>\n        </el-form-item>\n      </el-form>\n    </el-col>\n  </el-row>\n</template>\n\n\n<script>\nimport { User, Lock } from '@element-plus/icons-vue'\nimport { ref } from 'vue'\nimport { ElMessage } from 'element-plus'\n//控制注册与登录表单的显示， 默认显示注册\nconst isRegister = ref(false)\n//定义数据模型\nconst registerData = ref({\n  username: '',\n  password: '',\n  rePassword: ''\n})\n\n//校验密码的函数\nconst checkRePassword = (rule, value, callback) => {\n  if (value === '') {\n    callback(new Error('请再次确认密码'))\n  } else if (value !== registerData.value.password) {\n    callback(new Error('请确保两次输入的密码一样'))\n  } else {\n    callback()\n  }\n}\n\n//定义表单校验规则\nconst rules = {\n  username: [\n    { required: true, message: '请输入用户名', trigger: 'blur' },\n    { min: 5, max: 16, message: '长度为5~16位非空字符', trigger: 'blur' }\n  ],\n  password: [\n    { required: true, message: '请输入密码', trigger: 'blur' },\n    { min: 5, max: 16, message: '长度为5~16位非空字符', trigger: 'blur' }\n  ],\n  rePassword: [\n    { validator: checkRePassword, trigger: 'blur' }\n  ]\n}\n\n//定义函数,清空数据模型的数据\nconst clearRegisterData = () => {\n  registerData.value = {\n    username: '',\n    password: '',\n    rePassword: ''\n  }\n}\n\n\n\n</script>\n\n<style lang=\"scss\" scoped>\n/* 样式 */\n.login-page {\n  height: 100vh;\n  background-color: #fff;\n\n  .bg {\n    background: url('@/assets/logo2.png') no-repeat 60% center / 240px auto,\n    url('@/assets/login_bg.jpg') no-repeat center / cover;\n    border-radius: 0 20px 20px 0;\n  }\n\n  .form {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    user-select: none;\n\n    .title {\n      margin: 0 auto;\n    }\n\n    .button {\n      width: 100%;\n    }\n\n    .flex {\n      width: 100%;\n      display: flex;\n      justify-content: space-between;\n    }\n  }\n}\n</style>\n"],"mappings":"AAiEA,SAASA,IAAI,EAAEC,IAAG,QAAS,yBAAwB;AACnD,SAASC,GAAE,QAAS,KAAI;AACxB,SAASC,SAAQ,QAAS,cAAa;AACvC;AACA,MAAMC,UAAS,GAAIF,GAAG,CAAC,KAAK;AAC5B;AACA,MAAMG,YAAW,GAAIH,GAAG,CAAC;EACvBI,QAAQ,EAAE,EAAE;EACZC,QAAQ,EAAE,EAAE;EACZC,UAAU,EAAE;AACd,CAAC;;AAED;AACA,MAAMC,eAAc,GAAIA,CAACC,IAAI,EAAEC,KAAK,EAAEC,QAAQ,KAAK;EACjD,IAAID,KAAI,KAAM,EAAE,EAAE;IAChBC,QAAQ,CAAC,IAAIC,KAAK,CAAC,SAAS,CAAC;EAC/B,OAAO,IAAIF,KAAI,KAAMN,YAAY,CAACM,KAAK,CAACJ,QAAQ,EAAE;IAChDK,QAAQ,CAAC,IAAIC,KAAK,CAAC,cAAc,CAAC;EACpC,OAAO;IACLD,QAAQ,CAAC;EACX;AACF;;AAEA;AACA,MAAME,KAAI,GAAI;EACZR,QAAQ,EAAE,CACR;IAAES,QAAQ,EAAE,IAAI;IAAEC,OAAO,EAAE,QAAQ;IAAEC,OAAO,EAAE;EAAO,CAAC,EACtD;IAAEC,GAAG,EAAE,CAAC;IAAEC,GAAG,EAAE,EAAE;IAAEH,OAAO,EAAE,cAAc;IAAEC,OAAO,EAAE;EAAO,EAC7D;EACDV,QAAQ,EAAE,CACR;IAAEQ,QAAQ,EAAE,IAAI;IAAEC,OAAO,EAAE,OAAO;IAAEC,OAAO,EAAE;EAAO,CAAC,EACrD;IAAEC,GAAG,EAAE,CAAC;IAAEC,GAAG,EAAE,EAAE;IAAEH,OAAO,EAAE,cAAc;IAAEC,OAAO,EAAE;EAAO,EAC7D;EACDT,UAAU,EAAE,CACV;IAAEY,SAAS,EAAEX,eAAe;IAAEQ,OAAO,EAAE;EAAO;AAElD;;AAEA;AACA,MAAMI,iBAAgB,GAAIA,CAAA,KAAM;EAC9BhB,YAAY,CAACM,KAAI,GAAI;IACnBL,QAAQ,EAAE,EAAE;IACZC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EACd;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}