{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { User, Lock } from '@element-plus/icons-vue';\nimport { ref } from 'vue';\nimport { ElMessage } from 'element-plus';\n//控制注册与登录表单地显示， 默认显示注册\nimport axios from \"axios\";\nimport store from \"@/store\";\nexport default {\n  __name: 'BlogLogin',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const isRegister = ref(false);\n    //定义数据模型\n    const registerData = ref({\n      username: '',\n      password: '',\n      rePassword: ''\n    });\n\n    //校验密码的函数\n    const checkRePassword = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请再次确认密码'));\n      } else if (value !== registerData.value.password) {\n        callback(new Error('请确保两次输入的密码一样'));\n      } else {\n        callback();\n      }\n    };\n\n    //定义表单校验规则\n    const rules = {\n      username: [{\n        required: true,\n        message: '请输入用户名',\n        trigger: 'blur'\n      }, {\n        min: 5,\n        max: 16,\n        message: '长度为5~16位非空字符',\n        trigger: 'blur'\n      }],\n      password: [{\n        required: true,\n        message: '请输入密码',\n        trigger: 'blur'\n      }, {\n        min: 5,\n        max: 16,\n        message: '长度为5~16位非空字符',\n        trigger: 'blur'\n      }],\n      rePassword: [{\n        validator: checkRePassword,\n        trigger: 'blur'\n      }]\n    };\n\n    //定义函数,清空数据模型的数据\n    const clearRegisterData = () => {\n      registerData.value = {\n        username: '',\n        password: '',\n        rePassword: ''\n      };\n    };\n    const login = () => {\n      axios.post('/login', this.ruleForm).then(res => {\n        if (res.data.msg === \"用户不存在\") {\n          ElMessage.error(\"用户不存在\");\n          return;\n        }\n        if (res.data.msg === \"密码不正确\") {\n          ElMessage.error(\"密码不正确\");\n          return;\n        }\n        const jwt = res.headers['authorization'];\n        const userInfo = res.data.data;\n\n        // 更新Vuex状态\n        store.commit(\"SET_TOKEN\", jwt);\n        store.commit(\"SET_USERINFO\", userInfo);\n\n        // 导航到博客页面\n        this.$router.push(\"/blogs\");\n      });\n    };\n    const __returned__ = {\n      isRegister,\n      registerData,\n      checkRePassword,\n      rules,\n      clearRegisterData,\n      login,\n      get User() {\n        return User;\n      },\n      get Lock() {\n        return Lock;\n      },\n      ref,\n      get ElMessage() {\n        return ElMessage;\n      },\n      get axios() {\n        return axios;\n      },\n      get store() {\n        return store;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["User","Lock","ref","ElMessage","axios","store","isRegister","registerData","username","password","rePassword","checkRePassword","rule","value","callback","Error","rules","required","message","trigger","min","max","validator","clearRegisterData","login","post","ruleForm","then","res","data","msg","error","jwt","headers","userInfo","commit","$router","push"],"sources":["/Users/wangxiaokang/Desktop/SpringBoot/vue-project/src/views/BlogLogin.vue"],"sourcesContent":["<template>\n  <el-row class=\"login-page\">\n    <el-col :span=\"12\" class=\"bg\"></el-col>\n    <el-col :span=\"6\" :offset=\"3\" class=\"form\">\n      <!-- 注册表单 -->\n      <el-form ref=\"form\" size=\"large\" autocomplete=\"off\" v-if=\"isRegister\" :model=\"registerData\" :rules=\"rules\">\n        <el-form-item>\n          <h1>注册</h1>\n        </el-form-item>\n        <el-form-item prop=\"username\">\n          <el-input :prefix-icon=\"User\" placeholder=\"请输入用户名\" v-model=\"registerData.username\"></el-input>\n        </el-form-item>\n        <el-form-item prop=\"password\">\n          <el-input :prefix-icon=\"Lock\" type=\"password\" placeholder=\"请输入密码\" v-model=\"registerData.password\"></el-input>\n        </el-form-item>\n        <el-form-item prop=\"rePassword\">\n          <el-input :prefix-icon=\"Lock\" type=\"password\" placeholder=\"请输入再次密码\"\n                    v-model=\"registerData.rePassword\"></el-input>\n        </el-form-item>\n        <!-- 注册按钮 -->\n        <el-form-item>\n          <el-button class=\"button\" type=\"primary\" auto-insert-space @click=\"register\">\n            注册\n          </el-button>\n        </el-form-item>\n        <el-form-item class=\"flex\">\n          <el-link type=\"info\" :underline=\"false\" @click=\"isRegister = false; clearRegisterData()\">\n            ← 返回\n          </el-link>\n        </el-form-item>\n      </el-form>\n      <!-- 登录表单 -->\n      <el-form ref=\"form\" size=\"large\" autocomplete=\"off\" v-else :model=\"registerData\" :rules=\"rules\">\n        <el-form-item>\n          <h1>登录</h1>\n        </el-form-item>\n        <el-form-item prop=\"username\">\n          <el-input :prefix-icon=\"User\" placeholder=\"请输入用户名\" v-model=\"registerData.username\"></el-input>\n        </el-form-item>\n        <el-form-item prop=\"password\">\n          <el-input name=\"password\" :prefix-icon=\"Lock\" type=\"password\" placeholder=\"请输入密码\"\n                    v-model=\"registerData.password\"></el-input>\n        </el-form-item>\n        <el-form-item class=\"flex\">\n          <div class=\"flex\">\n            <el-checkbox>记住我</el-checkbox>\n            <el-link type=\"primary\" :underline=\"false\">忘记密码？</el-link>\n          </div>\n        </el-form-item>\n        <!-- 登录按钮 -->\n        <el-form-item>\n          <el-button class=\"button\" type=\"primary\" auto-insert-space @click=\"login\">登录</el-button>\n        </el-form-item>\n        <el-form-item class=\"flex\">\n          <el-link type=\"info\" :underline=\"false\" @click=\"isRegister = true; clearRegisterData()\">\n            注册 →\n          </el-link>\n        </el-form-item>\n      </el-form>\n    </el-col>\n  </el-row>\n</template>\n\n\n<script setup>\nimport { User, Lock } from '@element-plus/icons-vue'\nimport { ref } from 'vue'\nimport { ElMessage } from 'element-plus'\n//控制注册与登录表单地显示， 默认显示注册\nconst isRegister = ref(false)\n//定义数据模型\nconst registerData = ref({\n  username: '',\n  password: '',\n  rePassword: ''\n})\n\n//校验密码的函数\nconst checkRePassword = (rule, value, callback) => {\n  if (value === '') {\n    callback(new Error('请再次确认密码'))\n  } else if (value !== registerData.value.password) {\n    callback(new Error('请确保两次输入的密码一样'))\n  } else {\n    callback()\n  }\n}\n\n//定义表单校验规则\nconst rules = {\n  username: [\n    { required: true, message: '请输入用户名', trigger: 'blur' },\n    { min: 5, max: 16, message: '长度为5~16位非空字符', trigger: 'blur' }\n  ],\n  password: [\n    { required: true, message: '请输入密码', trigger: 'blur' },\n    { min: 5, max: 16, message: '长度为5~16位非空字符', trigger: 'blur' }\n  ],\n  rePassword: [\n    { validator: checkRePassword, trigger: 'blur' }\n  ]\n}\n\n//定义函数,清空数据模型的数据\nconst clearRegisterData = () => {\n  registerData.value = {\n    username: '',\n    password: '',\n    rePassword: ''\n  }\n}\n\nimport axios from \"axios\";\nimport store from \"@/store\";\n\nconst login = () =>{\n  axios.post('/login', this.ruleForm).then(res => {\n\n    if(res.data.msg === \"用户不存在\"){\n      ElMessage.error(\"用户不存在\")\n      return;\n    }\n\n    if(res.data.msg === \"密码不正确\"){\n      ElMessage.error(\"密码不正确\")\n      return;\n    }\n    const jwt = res.headers['authorization'];\n    const userInfo = res.data.data;\n\n    // 更新Vuex状态\n    store.commit(\"SET_TOKEN\", jwt);\n    store.commit(\"SET_USERINFO\", userInfo);\n\n\n    // 导航到博客页面\n    this.$router.push(\"/blogs\");\n  })\n}\n\n</script>\n\n<style lang=\"scss\" scoped>\n/* 样式 */\n.login-page {\n  height: 100vh;\n  background-color: #fff;\n\n  .bg {\n    background: url('@/assets/logo2.png') no-repeat 60% center / 240px auto,\n    url('@/assets/login_bg.jpg') no-repeat center / cover;\n    border-radius: 0 20px 20px 0;\n  }\n\n  .form {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    user-select: none;\n\n    .title {\n      margin: 0 auto;\n    }\n\n    .button {\n      width: 100%;\n    }\n\n    .flex {\n      width: 100%;\n      display: flex;\n      justify-content: space-between;\n    }\n  }\n}\n</style>\n"],"mappings":";AAiEA,SAASA,IAAI,EAAEC,IAAI,QAAQ,yBAAyB;AACpD,SAASC,GAAG,QAAQ,KAAK;AACzB,SAASC,SAAS,QAAQ,cAAc;AACxC;AA4CA,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,SAAS;;;;;;;IA5C3B,MAAMC,UAAU,GAAGJ,GAAG,CAAC,KAAK,CAAC;IAC7B;IACA,MAAMK,YAAY,GAAGL,GAAG,CAAC;MACvBM,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,UAAU,EAAE;IACd,CAAC,CAAC;;IAEF;IACA,MAAMC,eAAe,GAAGA,CAACC,IAAI,EAAEC,KAAK,EAAEC,QAAQ,KAAK;MACjD,IAAID,KAAK,KAAK,EAAE,EAAE;QAChBC,QAAQ,CAAC,IAAIC,KAAK,CAAC,SAAS,CAAC,CAAC;MAChC,CAAC,MAAM,IAAIF,KAAK,KAAKN,YAAY,CAACM,KAAK,CAACJ,QAAQ,EAAE;QAChDK,QAAQ,CAAC,IAAIC,KAAK,CAAC,cAAc,CAAC,CAAC;MACrC,CAAC,MAAM;QACLD,QAAQ,CAAC,CAAC;MACZ;IACF,CAAC;;IAED;IACA,MAAME,KAAK,GAAG;MACZR,QAAQ,EAAE,CACR;QAAES,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,QAAQ;QAAEC,OAAO,EAAE;MAAO,CAAC,EACtD;QAAEC,GAAG,EAAE,CAAC;QAAEC,GAAG,EAAE,EAAE;QAAEH,OAAO,EAAE,cAAc;QAAEC,OAAO,EAAE;MAAO,CAAC,CAC9D;MACDV,QAAQ,EAAE,CACR;QAAEQ,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,OAAO;QAAEC,OAAO,EAAE;MAAO,CAAC,EACrD;QAAEC,GAAG,EAAE,CAAC;QAAEC,GAAG,EAAE,EAAE;QAAEH,OAAO,EAAE,cAAc;QAAEC,OAAO,EAAE;MAAO,CAAC,CAC9D;MACDT,UAAU,EAAE,CACV;QAAEY,SAAS,EAAEX,eAAe;QAAEQ,OAAO,EAAE;MAAO,CAAC;IAEnD,CAAC;;IAED;IACA,MAAMI,iBAAiB,GAAGA,CAAA,KAAM;MAC9BhB,YAAY,CAACM,KAAK,GAAG;QACnBL,QAAQ,EAAE,EAAE;QACZC,QAAQ,EAAE,EAAE;QACZC,UAAU,EAAE;MACd,CAAC;IACH,CAAC;IAKD,MAAMc,KAAK,GAAGA,CAAA,KAAK;MACjBpB,KAAK,CAACqB,IAAI,CAAC,QAAQ,EAAE,IAAI,CAACC,QAAQ,CAAC,CAACC,IAAI,CAACC,GAAG,IAAI;QAE9C,IAAGA,GAAG,CAACC,IAAI,CAACC,GAAG,KAAK,OAAO,EAAC;UAC1B3B,SAAS,CAAC4B,KAAK,CAAC,OAAO,CAAC;UACxB;QACF;QAEA,IAAGH,GAAG,CAACC,IAAI,CAACC,GAAG,KAAK,OAAO,EAAC;UAC1B3B,SAAS,CAAC4B,KAAK,CAAC,OAAO,CAAC;UACxB;QACF;QACA,MAAMC,GAAG,GAAGJ,GAAG,CAACK,OAAO,CAAC,eAAe,CAAC;QACxC,MAAMC,QAAQ,GAAGN,GAAG,CAACC,IAAI,CAACA,IAAI;;QAE9B;QACAxB,KAAK,CAAC8B,MAAM,CAAC,WAAW,EAAEH,GAAG,CAAC;QAC9B3B,KAAK,CAAC8B,MAAM,CAAC,cAAc,EAAED,QAAQ,CAAC;;QAGtC;QACA,IAAI,CAACE,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC;MAC7B,CAAC,CAAC;IACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}