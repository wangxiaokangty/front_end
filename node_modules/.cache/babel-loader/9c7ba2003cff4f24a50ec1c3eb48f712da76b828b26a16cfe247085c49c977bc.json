{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-79a17ec6\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = [\"src\"];\nconst _hoisted_2 = {\n  class: \"form-wrapper\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_header = _resolveComponent(\"el-header\");\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _component_el_main = _resolveComponent(\"el-main\");\n  const _component_el_container = _resolveComponent(\"el-container\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_el_container, null, {\n    default: _withCtx(() => [_createVNode(_component_el_header, null, {\n      default: _withCtx(() => [_createCommentVNode(\" Logo图片，注意这里的src应该使用 :src 来绑定动态路径 \"), _createElementVNode(\"img\", {\n        src: require('@/assets/logo.png'),\n        alt: \"\"\n      }, null, 8 /* PROPS */, _hoisted_1)]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_main, null, {\n      default: _withCtx(() => [_createCommentVNode(\" 表单包裹器 \"), _createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" 表单组件 \"), _createVNode(_component_el_form, {\n        model: $data.ruleForm,\n        rules: $data.rules,\n        ref: \"ruleForm\",\n        \"label-width\": \"80px\",\n        class: \"demo-ruleForm\"\n      }, {\n        default: _withCtx(() => [_createCommentVNode(\" 用户名表单项 \"), _createVNode(_component_el_form_item, {\n          label: \"用户名\",\n          prop: \"username\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_input, {\n            modelValue: $data.ruleForm.username,\n            \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.ruleForm.username = $event)\n          }, null, 8 /* PROPS */, [\"modelValue\"])]),\n          _: 1 /* STABLE */\n        }), _createCommentVNode(\" 密码表单项 \"), _createVNode(_component_el_form_item, {\n          label: \"密码\",\n          prop: \"password\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_input, {\n            type: \"password\",\n            modelValue: $data.ruleForm.password,\n            \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.ruleForm.password = $event),\n            placeholder: \"Please input password\",\n            \"show-password\": \"\"\n          }, null, 8 /* PROPS */, [\"modelValue\"])]),\n          _: 1 /* STABLE */\n        }), _createCommentVNode(\" 表单操作按钮 \"), _createVNode(_component_el_form_item, null, {\n          default: _withCtx(() => [_createVNode(_component_el_button, {\n            type: \"primary\",\n            onClick: _cache[2] || (_cache[2] = $event => $options.submitForm('ruleForm'))\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"立即创建\")]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_button, {\n            onClick: _cache[3] || (_cache[3] = $event => $options.resetForm('ruleForm'))\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"重置\")]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"model\", \"rules\"])])]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["class","_createElementBlock","_createVNode","_component_el_container","default","_withCtx","_component_el_header","_createCommentVNode","_createElementVNode","src","require","alt","_hoisted_1","_","_component_el_main","_hoisted_2","_component_el_form","model","$data","ruleForm","rules","ref","_component_el_form_item","label","prop","_component_el_input","modelValue","username","_cache","$event","type","password","placeholder","_component_el_button","onClick","$options","submitForm","_createTextVNode","resetForm"],"sources":["/Users/wangxiaokang/Desktop/SpringBoot/vue-project/src/views/BlogLogin.vue"],"sourcesContent":["<template>\n  <div>\n\n    <el-container>\n\n      <el-header>\n        <!-- Logo图片，注意这里的src应该使用 :src 来绑定动态路径 -->\n        <img :src=\"require('@/assets/logo.png')\" alt=\"\">\n      </el-header>\n\n      <el-main>\n        <!-- 表单包裹器 -->\n        <div class=\"form-wrapper\">\n          <!-- 表单组件 -->\n          <el-form :model=\"ruleForm\" :rules=\"rules\" ref=\"ruleForm\" label-width=\"80px\" class=\"demo-ruleForm\">\n\n            <!-- 用户名表单项 -->\n            <el-form-item label=\"用户名\" prop=\"username\">\n              <el-input v-model=\"ruleForm.username\"></el-input>\n            </el-form-item>\n\n            <!-- 密码表单项 -->\n            <el-form-item label=\"密码\" prop=\"password\">\n              <el-input type=\"password\" v-model=\"ruleForm.password\" placeholder=\"Please input password\" show-password></el-input>\n            </el-form-item>\n\n            <!-- 表单操作按钮 -->\n            <el-form-item>\n              <el-button type=\"primary\" @click=\"submitForm('ruleForm')\">立即创建</el-button>\n              <el-button @click=\"resetForm('ruleForm')\">重置</el-button>\n            </el-form-item>\n\n          </el-form>\n        </div>\n\n      </el-main>\n\n    </el-container>\n\n  </div>\n</template>\n\n\n<script>\nexport default {\n  name: \"Login\",\n  data() {\n    return {\n      // 表单数据对象\n      ruleForm: {\n        username: 'user1',\n        password: 'password1'\n      },\n      // 表单验证规则\n      rules: {\n        username: [\n          { required: true, message: '请输入用户名', trigger: 'blur' },\n          { min: 3, max: 15, message: '长度在 3 到 15 个字符', trigger: 'blur' }\n        ],\n        password: [\n          { required: true, message: '请选择密码', trigger: 'change' }\n        ]\n      }\n    };\n  },\n  methods: {\n    // 提交表单方法\n    submitForm(formName) {\n      // 表单验证\n      this.$refs[formName].validate((valid) => {\n        if (valid) {\n          // 提交表单\n          this.$axios.post('/login', this.ruleForm).then(res => {\n            const jwt = res.headers['authorization'];\n            const userInfo = res.data.data;\n\n            // 更新Vuex状态\n            this.$store.commit(\"SET_TOKEN\", jwt);\n            console.log(this.$store.token)\n            this.$store.commit(\"SET_USERINFO\", userInfo);\n\n            // 导航到博客页面\n            this.$router.push(\"/blogs\");\n          });\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n    },\n    // 重置表单方法\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    }\n  }\n}\n</script>\n\n<style scoped>\n.el-header {\n  text-align: center;\n  padding: 10px 0;\n}\n\n.el-main {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n}\n\n.form-wrapper {\n  max-width: 500px;\n\n  width: 100%;\n  padding: 20px;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n  margin: 20px;\n  background: #FFFFFF;\n}\n\n.demo-ruleForm {\n  margin: 0 auto;\n}\n</style>\n\n"],"mappings":";;mBAAA;;EAYaA,KAAK,EAAC;AAAc;;;;;;;;;uBAX/BC,mBAAA,CAsCM,cApCJC,YAAA,CAkCeC,uBAAA;IArCnBC,OAAA,EAAAC,QAAA,CAKM,MAGY,CAHZH,YAAA,CAGYI,oBAAA;MARlBF,OAAA,EAAAC,QAAA,CAMQ,MAAyC,CAAzCE,mBAAA,sCAAyC,EACzCC,mBAAA,CAAgD;QAA1CC,GAAG,EAAEC,OAAO;QAAuBC,GAAG,EAAC;8BAPrDC,UAAA,E;MAAAC,CAAA;QAUMX,YAAA,CAyBUY,kBAAA;MAnChBV,OAAA,EAAAC,QAAA,CAWQ,MAAc,CAAdE,mBAAA,WAAc,EACdC,mBAAA,CAqBM,OArBNO,UAqBM,GApBJR,mBAAA,UAAa,EACbL,YAAA,CAkBUc,kBAAA;QAlBAC,KAAK,EAAEC,KAAA,CAAAC,QAAQ;QAAGC,KAAK,EAAEF,KAAA,CAAAE,KAAK;QAAEC,GAAG,EAAC,UAAU;QAAC,aAAW,EAAC,MAAM;QAACrB,KAAK,EAAC;;QAd5FI,OAAA,EAAAC,QAAA,CAgBY,MAAe,CAAfE,mBAAA,YAAe,EACfL,YAAA,CAEeoB,uBAAA;UAFDC,KAAK,EAAC,KAAK;UAACC,IAAI,EAAC;;UAjB3CpB,OAAA,EAAAC,QAAA,CAkBc,MAAiD,CAAjDH,YAAA,CAAiDuB,mBAAA;YAlB/DC,UAAA,EAkBiCR,KAAA,CAAAC,QAAQ,CAACQ,QAAQ;YAlBlD,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAkBiCX,KAAA,CAAAC,QAAQ,CAACQ,QAAQ,GAAAE,MAAA;;UAlBlDhB,CAAA;YAqBYN,mBAAA,WAAc,EACdL,YAAA,CAEeoB,uBAAA;UAFDC,KAAK,EAAC,IAAI;UAACC,IAAI,EAAC;;UAtB1CpB,OAAA,EAAAC,QAAA,CAuBc,MAAmH,CAAnHH,YAAA,CAAmHuB,mBAAA;YAAzGK,IAAI,EAAC,UAAU;YAvBvCJ,UAAA,EAuBiDR,KAAA,CAAAC,QAAQ,CAACY,QAAQ;YAvBlE,uBAAAH,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAuBiDX,KAAA,CAAAC,QAAQ,CAACY,QAAQ,GAAAF,MAAA;YAAEG,WAAW,EAAC,uBAAuB;YAAC,eAAa,EAAb;;UAvBxGnB,CAAA;YA0BYN,mBAAA,YAAe,EACfL,YAAA,CAGeoB,uBAAA;UA9B3BlB,OAAA,EAAAC,QAAA,CA4Bc,MAA0E,CAA1EH,YAAA,CAA0E+B,oBAAA;YAA/DH,IAAI,EAAC,SAAS;YAAEI,OAAK,EAAAN,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEM,QAAA,CAAAC,UAAU;;YA5B1DhC,OAAA,EAAAC,QAAA,CA4BwE,MAAI,CA5B5EgC,gBAAA,CA4BwE,MAAI,E;YA5B5ExB,CAAA;cA6BcX,YAAA,CAAwD+B,oBAAA;YAA5CC,OAAK,EAAAN,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEM,QAAA,CAAAG,SAAS;;YA7B1ClC,OAAA,EAAAC,QAAA,CA6BwD,MAAE,CA7B1DgC,gBAAA,CA6BwD,IAAE,E;YA7B1DxB,CAAA;;UAAAA,CAAA;;QAAAA,CAAA;;MAAAA,CAAA;;IAAAA,CAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}