{"ast":null,"code":"// 引入自定义的头部组件\nimport Header from \"../components/Header\";\nexport default {\n  name: \"Blogs\",\n  components: {\n    Header\n  },\n  data() {\n    return {\n      blogs: [],\n      currentPage: 1,\n      total: 0,\n      pageSize: 5\n    };\n  },\n  methods: {\n    handlePageChange(newPage) {\n      // 使用axios获取数据\n      this.$axios.get(`/blogs?currentPage=${newPage}`).then(response => {\n        const data = response.data.data;\n        this.blogs = data.records;\n        this.currentPage = data.current;\n        this.total = data.total;\n        this.pageSize = data.size;\n      }).catch(error => {\n        console.log(\"xiaochou\");\n        console.error('Error fetching blogs:', error);\n      });\n    }\n  },\n  created() {\n    this.handlePageChange(this.currentPage);\n  }\n};","map":{"version":3,"names":["Header","name","components","data","blogs","currentPage","total","pageSize","methods","handlePageChange","newPage","$axios","get","then","response","records","current","size","catch","error","console","log","created"],"sources":["/Users/wangxiaokang/Desktop/SpringBoot/vue-project/src/views/Blogs.vue"],"sourcesContent":["<template>\n  <!-- 主容器 -->\n  <div class=\"mcontainer\">\n    <Header></Header>\n\n\n    <div class=\"block\" style=\"max-width: 960px;margin-left: 280px;\n  margin-right: auto;\">\n      <!-- 时间线组件，用于展示博客条目 -->\n      <el-timeline>\n        <!-- 遍历blogs数组，为每个博客创建一个时间线条目 -->\n        <el-timeline-item v-for=\"blog in blogs\" :key=\"blog.id\" :timestamp=\"blog.created\" placement=\"top\">\n          <!-- 卡片组件，显示博客的标题和描述 -->\n          <el-card>\n            <h4>\n              <!-- 路由链接，点击后跳转到博客详情页 -->\n              <router-link :to=\"{ name: 'BlogDetail', params: { blogId: blog.id } }\">\n                {{ blog.title }}\n              </router-link>\n            </h4>\n            <p>{{ blog.description }}</p>\n          </el-card>\n        </el-timeline-item>\n      </el-timeline>\n\n      <!-- 分页器组件 -->\n      <el-pagination class=\"mpage\" background layout=\"prev, pager, next\" :current-page=\"currentPage\" :page-size=\"pageSize\"\n        :total=\"total\" @current-change=\"handlePageChange\">\n      </el-pagination>\n    </div>\n  </div>\n</template>\n\n<script>\n// 引入自定义的头部组件\nimport Header from \"../components/Header\";\n\nexport default {\n  name: \"Blogs\",\n  components: { Header },\n  data() {\n    return {\n      blogs: [],\n      currentPage: 1,\n      total: 0,\n      pageSize: 5\n    }\n  },\n  methods: {\n    handlePageChange(newPage) {\n      // 使用axios获取数据\n      this.$axios.get(`/blogs?currentPage=${newPage}`)\n        .then(response => {\n          const data = response.data.data;\n          this.blogs = data.records;\n          this.currentPage = data.current;\n          this.total = data.total;\n          this.pageSize = data.size;\n        })\n        .catch(error => {\n          console.log(\"xiaochou\")\n          console.error('Error fetching blogs:', error);\n        });\n    }\n  },\n  created() {\n    this.handlePageChange(this.currentPage);\n  }\n}\n</script>\n\n<style scoped>\n/* 分页器样式 */\n.mpage {\n  margin-left: auto;\n  margin-right: auto;\n  /* 自动外边距实现居中 */\n}\n</style>\n"],"mappings":"AAkCA;AACA,OAAOA,MAAK,MAAO,sBAAsB;AAEzC,eAAe;EACbC,IAAI,EAAE,OAAO;EACbC,UAAU,EAAE;IAAEF;EAAO,CAAC;EACtBG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,WAAW,EAAE,CAAC;MACdC,KAAK,EAAE,CAAC;MACRC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,gBAAgBA,CAACC,OAAO,EAAE;MACxB;MACA,IAAI,CAACC,MAAM,CAACC,GAAG,CAAE,sBAAqBF,OAAQ,EAAC,EAC5CG,IAAI,CAACC,QAAO,IAAK;QAChB,MAAMX,IAAG,GAAIW,QAAQ,CAACX,IAAI,CAACA,IAAI;QAC/B,IAAI,CAACC,KAAI,GAAID,IAAI,CAACY,OAAO;QACzB,IAAI,CAACV,WAAU,GAAIF,IAAI,CAACa,OAAO;QAC/B,IAAI,CAACV,KAAI,GAAIH,IAAI,CAACG,KAAK;QACvB,IAAI,CAACC,QAAO,GAAIJ,IAAI,CAACc,IAAI;MAC3B,CAAC,EACAC,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACC,GAAG,CAAC,UAAU;QACtBD,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C,CAAC,CAAC;IACN;EACF,CAAC;EACDG,OAAOA,CAAA,EAAG;IACR,IAAI,CAACb,gBAAgB,CAAC,IAAI,CAACJ,WAAW,CAAC;EACzC;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}