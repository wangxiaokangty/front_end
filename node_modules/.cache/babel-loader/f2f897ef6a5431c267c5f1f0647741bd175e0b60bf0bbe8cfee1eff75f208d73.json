{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"Login\",\n  data() {\n    return {\n      // 表单数据对象\n      ruleForm: {\n        username: 'user1',\n        password: 'password1'\n      },\n      // 表单验证规则\n      rules: {\n        username: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 15,\n          message: '长度在 3 到 15 个字符',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请选择密码',\n          trigger: 'change'\n        }]\n      }\n    };\n  },\n  methods: {\n    // 提交表单方法\n    submitForm(formName) {\n      // 表单验证\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          // 提交表单\n          this.$axios.post('/login', this.ruleForm).then(res => {\n            const jwt = res.headers['authorization'];\n            const userInfo = res.data.data;\n\n            // 更新Vuex状态\n            this.$store.commit(\"SET_TOKEN\", jwt);\n            this.$store.commit(\"SET_USERINFO\", userInfo);\n\n            // 导航到博客页面\n            this.$router.push(\"/blogs\");\n          });\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n    },\n    // 重置表单方法\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    }\n  }\n};","map":{"version":3,"names":["name","data","ruleForm","username","password","rules","required","message","trigger","min","max","methods","submitForm","formName","$refs","validate","valid","$axios","post","then","res","jwt","headers","userInfo","$store","commit","$router","push","console","log","resetForm","resetFields"],"sources":["/Users/wangxiaokang/Desktop/SpringBoot/vue-project/src/views/BlogLogin.vue"],"sourcesContent":["<template>\n  <div>\n\n    <el-container>\n\n      <el-header>\n        <!-- Logo图片，注意这里的src应该使用 :src 来绑定动态路径 -->\n        <img :src=\"require('@/assets/logo.png')\" alt=\"\">\n      </el-header>\n\n      <el-main>\n        <!-- 表单包裹器 -->\n        <div class=\"form-wrapper\">\n          <!-- 表单组件 -->\n          <el-form :model=\"ruleForm\" :rules=\"rules\" ref=\"ruleForm\" label-width=\"80px\" class=\"demo-ruleForm\">\n\n            <!-- 用户名表单项 -->\n            <el-form-item label=\"用户名\" prop=\"username\">\n              <el-input v-model=\"ruleForm.username\"></el-input>\n            </el-form-item>\n\n            <!-- 密码表单项 -->\n            <el-form-item label=\"密码\" prop=\"password\">\n              <el-input type=\"password\" v-model=\"ruleForm.password\" placeholder=\"Please input password\" show-password></el-input>\n            </el-form-item>\n\n            <!-- 表单操作按钮 -->\n            <el-form-item>\n              <el-button type=\"primary\" @click=\"submitForm('ruleForm')\">立即创建</el-button>\n              <el-button @click=\"resetForm('ruleForm')\">重置</el-button>\n            </el-form-item>\n\n          </el-form>\n        </div>\n\n      </el-main>\n\n    </el-container>\n\n  </div>\n</template>\n\n\n<script>\nexport default {\n  name: \"Login\",\n  data() {\n    return {\n      // 表单数据对象\n      ruleForm: {\n        username: 'user1',\n        password: 'password1'\n      },\n      // 表单验证规则\n      rules: {\n        username: [\n          { required: true, message: '请输入用户名', trigger: 'blur' },\n          { min: 3, max: 15, message: '长度在 3 到 15 个字符', trigger: 'blur' }\n        ],\n        password: [\n          { required: true, message: '请选择密码', trigger: 'change' }\n        ]\n      }\n    };\n  },\n  methods: {\n    // 提交表单方法\n    submitForm(formName) {\n      // 表单验证\n      this.$refs[formName].validate((valid) => {\n        if (valid) {\n          // 提交表单\n          this.$axios.post('/login', this.ruleForm).then(res => {\n            const jwt = res.headers['authorization'];\n            const userInfo = res.data.data;\n\n            // 更新Vuex状态\n            this.$store.commit(\"SET_TOKEN\", jwt);\n            this.$store.commit(\"SET_USERINFO\", userInfo);\n\n            // 导航到博客页面\n            this.$router.push(\"/blogs\");\n          });\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n    },\n    // 重置表单方法\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    }\n  }\n}\n</script>\n\n<style scoped>\n.el-header {\n  text-align: center;\n  padding: 10px 0;\n}\n\n.el-main {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n}\n\n.form-wrapper {\n  max-width: 500px;\n\n  width: 100%;\n  padding: 20px;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n  margin: 20px;\n  background: #FFFFFF;\n}\n\n.demo-ruleForm {\n  margin: 0 auto;\n}\n</style>\n\n"],"mappings":";AA4CA,eAAe;EACbA,IAAI,EAAE,OAAO;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACL;MACAC,QAAQ,EAAE;QACRC,QAAQ,EAAE,OAAO;QACjBC,QAAQ,EAAE;MACZ,CAAC;MACD;MACAC,KAAK,EAAE;QACLF,QAAQ,EAAE,CACR;UAAEG,QAAQ,EAAE,IAAI;UAAEC,OAAO,EAAE,QAAQ;UAAEC,OAAO,EAAE;QAAO,CAAC,EACtD;UAAEC,GAAG,EAAE,CAAC;UAAEC,GAAG,EAAE,EAAE;UAAEH,OAAO,EAAE,gBAAgB;UAAEC,OAAO,EAAE;QAAO,EAC/D;QACDJ,QAAQ,EAAE,CACR;UAAEE,QAAQ,EAAE,IAAI;UAAEC,OAAO,EAAE,OAAO;UAAEC,OAAO,EAAE;QAAS;MAE1D;IACF,CAAC;EACH,CAAC;EACDG,OAAO,EAAE;IACP;IACAC,UAAUA,CAACC,QAAQ,EAAE;MACnB;MACA,IAAI,CAACC,KAAK,CAACD,QAAQ,CAAC,CAACE,QAAQ,CAAEC,KAAK,IAAK;QACvC,IAAIA,KAAK,EAAE;UACT;UACA,IAAI,CAACC,MAAM,CAACC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAChB,QAAQ,CAAC,CAACiB,IAAI,CAACC,GAAE,IAAK;YACpD,MAAMC,GAAE,GAAID,GAAG,CAACE,OAAO,CAAC,eAAe,CAAC;YACxC,MAAMC,QAAO,GAAIH,GAAG,CAACnB,IAAI,CAACA,IAAI;;YAE9B;YACA,IAAI,CAACuB,MAAM,CAACC,MAAM,CAAC,WAAW,EAAEJ,GAAG,CAAC;YACpC,IAAI,CAACG,MAAM,CAACC,MAAM,CAAC,cAAc,EAAEF,QAAQ,CAAC;;YAE5C;YACA,IAAI,CAACG,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC;UAC7B,CAAC,CAAC;QACJ,OAAO;UACLC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;UAC7B,OAAO,KAAK;QACd;MACF,CAAC,CAAC;IACJ,CAAC;IACD;IACAC,SAASA,CAACjB,QAAQ,EAAE;MAClB,IAAI,CAACC,KAAK,CAACD,QAAQ,CAAC,CAACkB,WAAW,CAAC,CAAC;IACpC;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}